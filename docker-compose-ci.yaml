services:
  kafka:
    image: confluentinc/cp-kafka:7.7.1 # kafka 3.7.1
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "false"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 10
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "29092" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - eventsgateway

  eventsgateway-api:
    image: eventsgateway-server
    ports:
      - "5000:5000"
    depends_on:
      kafka:
        condition: service_healthy
    stop_grace_period: 30s
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5000" ]
      interval: 5s
      timeout: 10s
      retries: 10

    networks:
      - eventsgateway

networks:
  eventsgateway:
